[{"content":"背景 手里有个旧手机mate30pro，触摸屏断线后下半部分无法使用，换屏勉强成功，后玻璃盖又碎了，摄像头也不准，只能放弃，当是一场经历。\n想想还有点利用价值，就装了个termux，日常跑点服务应该没问题，nginx什么的就没必要了，最后琢磨到webdav上\n开始考虑用nginx，毕竟熟悉一点。检查后发现，虽然termux的nginx也打包了webdav支持，但是不支持ext模块，自己重新编译的代价太大，网上还是基于apache2的资料多一些。\n实践 安装apache2后， 可以先测试apache2的运行\n1 2 apachectl start apachectl stop termux 默认目录为： /data/data/com.termux/files/home apache2配置文件的相对目录为： ../usr/etc/apache2/\n主配置文件 httpd.conf 修改端口、服务器名称，启用4个dav相关模块并启用DAV配置文件\n1 2 3 4 5 6 7 8 Listen 8080 # 端口 ServerName localhost # 服务器名 LoadModule dav_module libexec/apache2/mod_dav.so LoadModule dav_fs_module libexec/apache2/mod_dav_fs.so LoadModule dav_lock_module libexec/apache2/mod_dav_lock.so LoadModule auth_digest_module libexec/apache2/mod_auth_digest.so Include etc/apache2/extra/httpd-dav.conf DAV配置文件 httpd-dav.conf 主要是修改该文件中的options权限 1 2 3 4 \u0026lt;RequireAny\u0026gt; Require method PROPFIND MKCOL GET POST DELETE PUT COPY MOVE LOCK UNLOCK OPTIONS Require user XXXX \u0026lt;/RequireAny\u0026gt; 创建目录，设置用户名密码 1 2 mkdir /data/data/com.termux/files/usr/uploads/ htdigest -c \u0026#34;/data/data/com.termux/files/usr/user.passwd\u0026#34; DAV-upload XXXX 用curl或者raidriver测试。 参考： Termux 使用 apache 搭建 webdav 服务器 termux安装apache2 webdav 揭秘Apache Dav Mod：掌握文件共享与协作的利器 ","date":"2025-04-10T15:00:02+08:00","permalink":"http://localhost:8080/p/%E6%89%8B%E6%9C%BA%E5%88%A9%E7%94%A8termux%E6%9E%B6%E8%AE%BEwebdav%E6%9C%8D%E5%8A%A1%E5%99%A8/","title":"手机利用termux架设webdav服务器"},{"content":"tmux 是一个终端复用器，它使用户可以在一个终端界面内管理多个会话、窗口和窗格。\n用途 分屏； 会话与窗口解绑，提交任务后台运行； 结对编程； tmux的四个层次： server： 服务。tmux运行的基础服务，以下模块均依赖于此服务； session： 会话。一个服务可以包含多个会话； window： 窗口。一个会话可以包含多个窗口； panel： 窗格/面板。一个窗口可以包含多个窗格。 命令选项 查看会话： tmux ls\n新建会话： 1 tmux new -s \u0026lt;session-name\u0026gt; 接入会话： 1 tmux attach -t \u0026lt;session-name\u0026gt; 或 tmux a -t 0 重命名： 1 tmux rename-session -t 0 \u0026lt;new-name\u0026gt; 切换会话： 1 tmux switch -t \u0026lt;session-name\u0026gt; 或 tmux s -t 0\u0026#34; 杀死会话： 1 tmux kill-session -t \u0026lt;session-name\u0026gt; 或 tmux kill-session -t 0 快捷键 tmux 默认的前缀键是 \u0026ldquo;Ctrl+b\u0026rdquo;。\n列出所有快捷键的命令：tmux list-keys\n会话的快捷键 s：列出所有会话 d：离开当前会话 $：重命名当前会话 窗口的快捷键 c：创建一个新窗口 n：切换到下一个窗口 w：从列表中选择窗口 0~9：切换到指定编号的窗口，编号显示在状态栏 ,：窗口重命名 窗格的快捷键 %：分成左右两个窗格 \u0026ldquo;：分成上下两个窗格 z：当前窗格全屏显示，再按一次恢复 q：显示窗格编号 t：在当前窗格显示时间 arrow key：光标切换到其他窗格 o：光标切换到下一个窗格 {：左移当前窗格 }：右移当前窗格 Ctrl+o：上移当前窗格 Alt+o：下移当前窗格 space：切换窗格布局 ","date":"2025-03-22T09:21:28+08:00","permalink":"http://localhost:8080/p/tmux%E7%BB%88%E7%AB%AF%E5%A4%8D%E7%94%A8%E5%B7%A5%E5%85%B7/","title":"Tmux终端复用工具"},{"content":"基础教程 https://www.runoob.com/docker/docker-tutorial.html\n添加镜像 1 2 3 4 5 6 7 8 9 10 11 sudo mkdir -p /etc/docker sudo tee /etc/docker/daemon.json \u0026lt;\u0026lt;EOF { \u0026#34;registry-mirrors\u0026#34;: [ \u0026#34;https://docker.1ms.run\u0026#34;, \u0026#34;https://docker.xuanyuan.me\u0026#34; ] } EOF sudo systemctl daemon-reload sudo systemctl restart docker 镜像列表\n名称 地址 轩辕搜索 docker tags https://dockers.xuanyuan.me AtomHub 可信镜像仓库平台 27（只包含基础镜像，共336个） https://atomhub.openatom.cn DaoCloud 镜像站 90 https://docker.m.daocloud.io Docker Hub Container Image Library 16 https://docker.fxxk.dedyn.io 镜像使用说明 19 https://dislabaiot.xyz 镜像使用说明 250 https://doublezonline.cloud 调试 查log 1 docker logs \u0026lt;container\u0026gt; 进入镜像检查 1 docker exec -it \u0026lt;container\u0026gt; \\bin\\bash ","date":"2025-03-22T08:55:00+08:00","permalink":"http://localhost:8080/p/docker%E8%BD%AF%E4%BB%B6/","title":"Docker软件"},{"content":"撤销 add后没法看diff了，如果还想返回去看区别就只好先撤销add\ngit status 先看一下add 中的文件 git reset HEAD 如果后面什么都不跟的话 就是上一次add 里面的全部撤销了 git reset HEAD XXX/XXX 撤销某个文件\n迁移仓库 github personal access token. profile -\u0026gt; settings -\u0026gt; personal-access-tokens 输入token名称 选择到具体仓库 no expiration 确认，复制字符串 ","date":"2025-03-22T00:38:07+08:00","permalink":"http://localhost:8080/p/git%E7%9B%B8%E5%85%B3/","title":"Git相关"},{"content":"图形图像 imageJ\npaint.net\nirfanview\npicasa\n文字处理 office\npspad\nnotepad++\nemacs\ntexlive + texstudio\nwinmerge\njmeld\noverleaf\ngithub\n文献管理 acroread\nwinDjview\ncalibre\nkindle\nsumatra PDF\njabref\nendnoteX (x)\ngithub\nmendeley\nwebofScience\n搜索 docfetcher\nsearx\nmezw\nlocate\n词典 artha\ngolden-dict\nbing translator\n视频影音 vlc\nkmplayer\nMPC-BEx64\nCNTV\nfoobar\nbilibili\n远程登陆 putty\nmsys2\nxming\nvcxsrv\n编程调试 cmake3\ngit\nqt-online\nvs 2017\nvcpkg\nvscode\nanaconda\nssh + emacs\n工具 filezilla\nirssi\nlftp\nwget curl\ndupeguru\nfreemind\n专业 root 5.34.36\ngeant4\nandor solis\ncomsol\nsolidwork\ngnuplot\nwindriver\nyED\nvidyo\nRIGOL\nteamviewer\nmatlab\nOpticalRayTracer\nThorlabs\n其他 7-zip\nchrome\nfirefox + bitwarden\nTIM\nwechat\naliwangwang\n钉钉\nscratch\nihepbox\nwinfsp + sirikari\npdftkX\nrufus\nCrystalDiskInfo\ndiskgenius\nCSR bt4.0\nHeidi SQL\ninkscape\nghostscript\nnvidia\nQiku phone helper\nsslvpn: easyconnection\npan.baidu.com\ncloud.189.com\nepson label\n","date":"2025-03-22T00:31:52+08:00","permalink":"http://localhost:8080/p/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6windows%E7%89%88/","title":"常用软件windows版"},{"content":"网络管理 firewalld network-manager 用户管理 将已有用户加入已有用户组 1 usermod -a -g \u0026lt;group\u0026gt; \u0026lt;user\u0026gt; ","date":"2025-03-22T00:28:58+08:00","permalink":"http://localhost:8080/p/linux%E7%9B%B8%E5%85%B3/","title":"Linux相关"},{"content":" 中国专利公布公告网\n专利检索及分析\n中国及多国专利审查信息查询\n专利信息服务平台\n国家重点产业专利信息服务平台\n中国专利网\npatentics\nsoopat\nincopat\n情报嗒嗒\n佰腾专利检索\n广东省知识产权公共信息综合服务平台\n上海知识产权（专利）服务平台\n江苏省中外专利检索与分析平台\n北京市知识产权公共信息服务平台\n中国知网\n万方数据\n药物在线\n","date":"2025-03-22T00:26:08+08:00","permalink":"http://localhost:8080/p/%E4%B8%93%E5%88%A9%E6%A3%80%E7%B4%A2%E7%BD%91%E7%AB%99/","title":"专利检索网站"},{"content":" 到 http://rxtx.qbang.org/wiki/index.php/Download 下载pre-build的zip包，解压备用 RXTXcomm.jar JAVAHOME\\jre\\lib\\ext rxtxSerial.dll JAVAHOME\\jre\\bin ok!\n","date":"2025-03-22T00:23:43+08:00","permalink":"http://localhost:8080/p/rxtx%E7%9A%84windows%E9%A9%B1%E5%8A%A8/","title":"RXTX的windows驱动"},{"content":" 添加头文件目录： 配置属性\u0026ndash;\u0026gt;C/C++\u0026ndash;\u0026gt;常规\u0026ndash;\u0026gt;附加包含目录 加上头文件存放的目录。\n添加lib文件：\n配置属性\u0026ndash;\u0026gt;链接器\u0026ndash;\u0026gt;输入\u0026ndash;\u0026gt;附加依赖项加入库名（×××.lib）；或者是在cpp源文件中用#pragma comment(lib,\u0026quot;×××.lib\u0026quot;)来代替。 此时编译会提示：fatal error LNK1104: 无法打开文件“×××.lib”，原因是编译器找不到lib文件。 给项目添加库文件路径 在VS中右击项目点属性： 配置属性\u0026ndash;\u0026gt;链接器\u0026ndash;\u0026gt;常规\u0026ndash;\u0026gt;附加目录 。在里面填上库文件所在的路径即可。\n直接添加库文件到工程中. 就像你添加.h和.cpp文件一样,把lib文件添加到工程文件列表中去。右键项目点添加选择现有项目，选择lib文件点确定即可。这个方法适用于在工程的debug版本和Release版本中都使用同一个lib库文件。\n","date":"2025-03-22T00:21:33+08:00","permalink":"http://localhost:8080/p/vs-compile-error/","title":"VS Compile Error"},{"content":"参考 https://linuxize.com/post/install-odoo-12-on-centos-7/\n缘起：用户管理需求，测试小型CRM及ERP工具，ZOHO相对来说不自由，于是用云服务器作了一个自己可控的系统\nodoo前身是openerp，是挪威一个哥们写的开源ERP系统，对标的是SAP，目前最新版本是odoo12，发展方向是多功能线上管理系统，目标用户是中小型企业，其他就不多说了。\n1 安装Python 3.6\nSL7的一个麻烦就是python36要先找centos7的SCL源的rpm包，把这个安装上去，后面才能和centos7一样，repo里自带的python36包不全，所以要用SCL源里的rh-python36。\n{% codeblock install python36 %} #yum install rh-python36 git gcc wget nodejs-less libxslt-devel bzip2-devel openldap-devel libjpeg-devel freetype-devel postgresql-devel {% endcodeblock %}\n2 创建系统用户odoo2、用户组以及目录： {% codeblock 创建用户 %} #useradd -m -U -r -d /opt/odoo12 -s /bin/bash odoo12 {% endcodeblock %}\n3 安装pgsql-10 当然要用最新的pg，只能用从官方的源来安装了。\n{% codeblock 添加pgsql官方源，安装和配置pgsql10 %} #yum install https://download.postgresql.org/pub/repos/yum/10/redhat/rhel-7-x86_64/pgdg-centos10-10-2.noarch.rpm #yum install postgresql10-server {% endcodeblock %}\n{% codeblock 配置%} #/usr/pgsql-10/bin/postgresql-10-setup initdb -E UTF-8 #systemctl enable postgresql-10 #systemctl start postgresql-10 #su - postgres -c \u0026ldquo;createuser -s odoo12\u0026rdquo; {% endcodeblock %}\n并且创建一个与系统用户同名的数据库用户，方便认证。\n4 安装pdf工具包\nwkhtmltox软件包是一个开源的命令行工具，它可以将html转换成pdf等其他各种格式 {% codeblock 下载和安装辅助工具软件 %} #wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.1/wkhtmltox-0.12.1_linux-centos7-amd64.rpm #yum localinstall wkhtmltox-0.12.1_linux-centos7-amd64.rpm {% endcodeblock %}\n5 下载安装和配置\n首先切换到同名系统用户\n{% codeblock 切换用户 %} su - odoo12 {% endcodeblock %}\n从官方git源克隆最新odoo12代码\n{% codeblock 克隆源%} git clone https://www.github.com/odoo/odoo \u0026ndash;depth 1 \u0026ndash;branch 12.0 /opt/odoo12/odoo {% endcodeblock %}\n使用rh-python36\n{% codeblock %} scl enable rh-python36 bash {% endcodeblock %}\n创建用于odoo的新虚拟环境，并激活；\n{% codeblock %} cd /opt/odoo12 python3 -m venv venv source venv/bin/activate {% endcodeblock %}\n更新pip，并安装odoo12所需模块，确保顺利满足所有依赖要求，退出虚拟环境\n{% codeblock %} pip3 install -r odoo/requirements.txt\ndeactivate {% endcodeblock %}\n以odoo12用户名建立本地附加模块目录，退出到超级用户\n{% codeblock %} mkdir /opt/odoo12/odoo-custom-addons exit {% endcodeblock %}\n创建系统配置文件，内容如下：\n{% codeblock %} #nano /etc/odoo12.conf {% endcodeblock %}\n{% codeblock %}\n/etc/odoo12.conf [options] ; This is the password that allows database operations: admin_passwd = superadmin_passwd db_host = False db_port = False db_user = odoo12 db_password = False addons_path = /opt/odoo12/odoo/addons, /opt/odoo12/odoo-custom-addons {% endcodeblock %}\n记得修改超级管理密码。\n创建systemd 单元文件来负责服务的启动和停止\n{% codeblock %} #nano /etc/systemd/system/odoo12.service {% endcodeblock %}\n/etc/systemd/system/odoo12.service 内容如下\n{% codeblock %} [Unit] Description=Odoo12 Requires=postgresql-10.service After=network.target postgresql-10.service\n[Service] Type=simple SyslogIdentifier=odoo12 PermissionsStartOnly=true User=odoo12 Group=odoo12 ExecStart=/usr/bin/scl enable rh-python36 \u0026ndash; /opt/odoo12/venv/bin/python3 /opt/odoo12/odoo/odoo-bin -c /etc/odoo12.conf StandardOutput=journal+console\n[Install] WantedBy=multi-user.target {% endcodeblock %}\n存盘后退出。\n更新systemd单元文件并启动odoo服务\n{% codeblock 启动服务%} systemctl daemon-reload systemctl enable odoo12 systemctl start odoo12 {% endcodeblock %}\n检查服务状态，确保正常运行。\n{% codeblock %} #systemctl status odoo12 #journalctl -u odoo12 {% endcodeblock %}\n打开页面检查安装结果，如果看不到页面，检查端口8069是否开放，把防火墙的firewalld关闭或者打开端口\n{% codeblock %} http://\u0026lt;your_domain_or_IP_address\u0026gt;:8069\n#netstat -lpn\n#firewall-cmd \u0026ndash;permanent \u0026ndash;zone=public \u0026ndash;add-port=8069/tcp #firewall-cmd \u0026ndash;reload {% endcodeblock %}\n看到如下页面即告成功。\n{% asset_img odoo-12-centos.png 首页 %}\n","date":"2025-03-21T23:50:41+08:00","permalink":"http://localhost:8080/p/oodoo%E9%85%8D%E7%BD%AE/","title":"oodoo配置"},{"content":" 配色问题，可以通过注册表文件指定任务的几种颜色来设置，具体如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 Windows Registry Editor Version 5.00 [HKEY_CURRENT_USER\\Software\\SimonTatham\\PuTTY\\Sessions\\SESSION_NAME] ; Default Foreground \u0026#34;Colour0\u0026#34;=\u0026#34;217,216,216\u0026#34; ; Default Bold Foreground \u0026#34;Colour1\u0026#34;=\u0026#34;217,216,216\u0026#34; ; Default Background \u0026#34;Colour2\u0026#34;=\u0026#34;28,28,28\u0026#34; ; Default Background \u0026#34;Colour3\u0026#34;=\u0026#34;28,63,149\u0026#34; ; Cursor Text \u0026#34;Colour4\u0026#34;=\u0026#34;28,28,28\u0026#34; ; Cursor Color \u0026#34;Colour5\u0026#34;=\u0026#34;231,231,232\u0026#34; ; ANSI Black \u0026#34;Colour6\u0026#34;=\u0026#34;115,113,113\u0026#34; ; ANSI Black Bold \u0026#34;Colour7\u0026#34;=\u0026#34;115,113,113\u0026#34; ; ANSI Red \u0026#34;Colour8\u0026#34;=\u0026#34;251,38,8\u0026#34; ; ANSI Red Bold \u0026#34;Colour9\u0026#34;=\u0026#34;251,38,8\u0026#34; ; ANSI Green \u0026#34;Colour10\u0026#34;=\u0026#34;167,226,46\u0026#34; ; ANSI Green Bold \u0026#34;Colour11\u0026#34;=\u0026#34;167,226,46\u0026#34; ; ANSI Yellow \u0026#34;Colour12\u0026#34;=\u0026#34;102,217,238\u0026#34; ; ANSI Yellow Bold \u0026#34;Colour13\u0026#34;=\u0026#34;102,217,238\u0026#34; ; ANSI Blue \u0026#34;Colour14\u0026#34;=\u0026#34;0,157,220\u0026#34; ; ANSI Blue Bold \u0026#34;Colour15\u0026#34;=\u0026#34;0,157,220\u0026#34; ; ANSI Magenta \u0026#34;Colour16\u0026#34;=\u0026#34;255,85,255\u0026#34; ; ANSI Magenta Bold \u0026#34;Colour17\u0026#34;=\u0026#34;255,85,255\u0026#34; ; ANSI Cyan \u0026#34;Colour18\u0026#34;=\u0026#34;255,210,4\u0026#34; ; ANSI Cyan Bold \u0026#34;Colour19\u0026#34;=\u0026#34;255,210,4\u0026#34; ; ANSI White \u0026#34;Colour20\u0026#34;=\u0026#34;217,216,216\u0026#34; ; ANSI White Bold \u0026#34;Colour21\u0026#34;=\u0026#34;255,255,255\u0026#34; 保存为reg文件后合并，注意将上述session name替换成自己的。\nputty的密匙\na. puttygen.exe导入自己的私匙， b. 保存私匙（ppk格式） c. session中auth中指定ppk私匙。\n连接保持 见图，keepalive 20s 字体及大小 选择monaco字体，字体大小选择12。\n全屏退出全屏的快捷键设置\nWindow-\u0026gt;Behaviour最下面有个Full screen on Alt-Enter，勾上就可以。\n","date":"2025-03-21T23:40:40+08:00","permalink":"http://localhost:8080/p/putty%E9%85%8D%E7%BD%AE/","title":"putty配置"},{"content":"做了两本，有些资料确实很难下载，网上有些资料还收费，无奈只能自己动手丰衣足食。\npicpick还真不错，能够自定义文件名并按序号自己排列好。当然最好是把显示屏旋转一下，可以获得更好的分辨效果。\n剩下的就是处理图片，用imagemagick批量转换成pdf页面，然后pdftk打包成一个书籍文件。\n","date":"2025-03-21T23:38:05+08:00","permalink":"http://localhost:8080/p/%E6%88%AA%E5%B1%8F%E5%81%9A%E4%B9%A6/","title":"截屏做书"},{"content":"tutor\nhttp://www.ni.com/tutorial/4478/zhs/\nmanual\nhttps://documentation.help/NI-VISA/ExampleMessageBasedComm.html#Example\nand example\nhttp://ena.support.keysight.com/e5071c/manuals/webhelp/eng/programming/vba_programming/controlling_peripherals/programming_with_visa.htm\n","date":"2025-03-21T23:18:28+08:00","permalink":"http://localhost:8080/p/ni-programming/","title":"NI-programming"},{"content":" 云端搭建kms服务器\n激活windows slmgr /skms [ip] slmgr /ato\n激活office cd c:\\program files\\Microsoft Office\\office15 cscript ospp.vbs /sethst:[ip]\n","date":"2025-03-21T23:16:39+08:00","permalink":"http://localhost:8080/p/kms%E6%BF%80%E6%B4%BB/","title":"KMS激活"},{"content":"imagemagick是一个很高效的命令行图片处理工具，可以结合shell编程实现批量处理，加快处理效率。一般我用来批量处理的工作有：批量改变大小、批量改变添加水印等。\nimagemagick用法：\n命令格式如下：\nconvert \u0026lt;输入图片名\u0026gt; [+/-命令和命令的参数]* \u0026lt;输出图片名\u0026gt;\n常用的命令有：\n-crop 宽x高+起点横坐标+起点纵坐标：裁剪图[]\n-resize 宽x高[!]：改变尺寸，如果使用惊叹号，表示不保留视觉比例，强行改变尺寸匹配给定的宽和高\n-colors 颜色数：设定图片采用的颜色数，如果是生成png或gif图片应指定这个参数\n-quality 质量：设定jpeg图片输出质量，推荐采用80，此命令仅用于输出格式是jpg的情况，不应省略，省略的话默认质量是95，生成图片过大+profile \u0026ldquo;*\u0026quot;：图片中不存储附加信息，必须使用，否则生成图片过大\n1、看图片： display命令；如果想看这个文件夹下的所有图片，display *即可。space是翻页；\n2、调整图片大小： convert -resize xxx*xxx a.jpg b.jpg 这是用解析度为参数；其实更方便的是用相对大小， convert -resize 25% a.jpg b.jpg。这个命令支持批处理，很赞；\n3、改变图片格式： convert a.jpg b.bmp等等，随便写，靠后缀来识别。当图片需要跨平台时，这个功能显得尤为实用；\n4、批量生成缩略图： mogrify -sample 80*60 *.jpg 不过这个命令会覆盖原有的文件，操作前需要进行原始文件的备份；\n5、图片加框（非常实用）：convert -border 60*60 “#000000″ a.jpg b.jpg，这里，60＊60是表示边框的宽度，第一个是纵边框的宽度，第二个是横边框的宽度，＃000000是RGB格式的边框色彩，通常不是黑色就是 白色，无所谓了；\n6、在图片上加上文字：对于图片分来来说，很是赞，convert -fill green -pointsize 40 -draw ‘text 10,50 “charry.org”‘ a.jpg b.jpg。表示在距离图片左上角10＊50的位置处，用绿色的文字写下charry.org，如果要指定别的字体，可以用 -font参数；\n7、高斯模糊：convert -blur 80 a.jpg b.jpg 参数还可以写成 -blur 80*5 后面的5表示sigma值；\n8、上下翻转： convert -flip a.jpg b.jpg\n9、左右翻转： convert -flop a.jpg b.jpg\n10、反色，形成底片的样子 convert -negate a.jpg b.jpg\n11、变成黑白色：convert -monochrome a.jpg b.jpg 是黑白色，不是灰度图\n12、油画的效果，有的时候很有感觉 convert -paint 4 a.jpg b.jpg\n13、旋转一定角度： convert -rotate 30 a.jpg b.jpg\n14、炭笔的效果，和油画的使用方法一样，把paint 换成 charcoal\n15、毛玻璃效果，同上，参数为 -spread\n","date":"2025-03-21T22:57:56+08:00","permalink":"http://localhost:8080/p/imagemagick%E7%94%A8%E6%B3%95/","title":"Imagemagick用法"},{"content":"NTP服务器 Name IP Location time.nist.gov 192.43.244.18 NCAR,Boulder,Colorado 210.72.145.44 210.72.145.44 中国（国家授时中心） 133.100.11.8 133.100.11.8 日本（福冈大学） time-a.nist.gov 129.6.15.28 NIST,Gaithersburg,Maryland time-b.nist.gov 129.6.15.29 NIST,Gaithersburg,Maryland time-a.timefreq.bldrdoc.gov 132.163.4.101 NIST,Boulder,Colorado time-b.timefreq.bldrdoc.gov 132.163.4.102 NIST,Boulder,Colorado time-c.timefreq.bldrdoc.gov 132.163.4.103 NIST,Boulder,Colorado utcnist.colorado.edu 128.138.140.44 UniversityofColorado,Boulder time-nw.nist.gov 131.107.1.10 Microsoft,Redmond,Washington nist1.symmetricom.com 69.25.96.13 Symmetricom,SanJose,California nist1-dc.glassey.com 216.200.93.8 Abovenet,Virginia nist1-ny.glassey.com 208.184.49.9 Abovenet,NewYorkCity nist1-sj.glassey.com 207.126.98.204 Abovenet,SanJose,California nist1.aol-ca.truetime.com 207.200.81.113 TrueTime,AOLfacility,Sunnyvale,California nist1.aol-va.truetime.com 64.236.96.53 TrueTime,AOLfacility,Virginia DNS列表 ihep: 202.38.128.58 114： 114.114.114.114 114.114.115.115 阿里： 223.5.5.5 223.6.6.6 百度： 180.76.76.76 谷歌： 8.8.8.8 OpenDNS： 208.67.220.220 firewall-cmd 永久打开端口\n1 firewall-cmd --zone=public --add-port=443/tcp --permanent 重启防火墙\n1 firewall-cmd --reload networkman git仓库的迁移 1 2 3 4 5 git clone --bare git://192.168.10.XX/git_repo/project_name.git git init --bare new_project_name.git git push --mirror git@192.168.20.XX/path/to/path/new_project_name.git 使用git remote set-url命令从SSH到HTTPS的远程URL\n1 git remote set-url origin https://github.com/xxxxxx/S selinux设置 打开nginx网络访问许可,解决gunicorn的转发权限； ··· setsebool -P httpd_can_network_connect 1\n1 2 与getsebool相对应，可以现查： getsebool -a #列出所有模块 getsebool -a | grep httpd #列出所有与httpd相关的模块\n1 其他相关命令 #查看selinux状态 sestatus\n#查看getenforce状态 getenforce\n#临时关闭selinux，设置SELinux 成为permissive模式 setenforce 0\n#临时打开selinux，设置SELinux 成为enforcing模式 setenforce 1\n#永久关闭SELinux vi /etc/selinux/config 修改并设置SELINUX=disabled，再重启服务器。\n#查看某个端口的规则 semanage port -l | grep 6379\n#查看redis端口规则 semanage port -l | grep redis_port_t\n","date":"2025-03-21T22:49:16+08:00","permalink":"http://localhost:8080/p/network%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3/","title":"network网络相关"}]